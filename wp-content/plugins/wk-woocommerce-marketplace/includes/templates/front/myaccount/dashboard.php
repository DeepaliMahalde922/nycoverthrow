<?phpif ( ! defined( 'ABSPATH' ) )	exit; // Exit if accessed directlyif ( ! class_exists( 'MP_Report_Dashboard' ) ) {	class MP_Report_Dashboard{		public $plugin_name = "";		public function __construct() {			global $options;			$this->plugin_name = "marketplace";			add_action( 'wp_enqueue_scripts', array( $this, 'graph_style_script' ) );			add_action( 'mp_show_dashboard_graph', array( $this, 'mp_graph_action_comman' ) );		}		public function per_page() {			return $per_page = get_option( 'posts_per_page', 5 );		}		public function graph_style_script() {			wp_enqueue_script( 'google_chart', 'https://www.google.com/jsapi');			wp_enqueue_script( 'bar_chart', 'https://www.gstatic.com/charts/loader.js');			wp_enqueue_script( 'mp_chart_script_with_google_api',  WK_MARKETPLACE . '/assets/js/chart_script.js' );			wp_enqueue_style( 'mp_dashboard_styles', WK_MARKETPLACE . '/assets/css/admin.css' );			wp_localize_script( 'ajax-script', 'ajax_object', array( 'ajaxurl' => admin_url( 'admin-ajax.php' ) ) ); // setting ajaxurl		}		function mp_graph_action_comman()		{			$this->mp_pie_chart_top_product();			$this->mp_today_order_count();			$this->mp_Last_7_days_sales_order_amount();			$this->mp_sales_order_count_value();			$this->mp_top_billing_country();		}		function mp_dashboard_page()		{			$total_orders 	= $this->mp_get_total_order_count() ? $this->mp_get_total_order_count() : 0;			$total_sales  	= $this->mp_get_total_order_amount();			$total_categories = $this->mp_get_total_categories_count();			$total_products = $this->mp_get_total_products_count();			do_action('mp_show_dashboard_graph');			?>				<div class="wrap">					<div class="wkmp-postbox">						<h3><span><?php _e('Dashboard','marketplace') ?></span></h3>						<div class="inside">							<table style="width:100%" class="dashboardtable">								<thead>									<tr>										<th><?php _e( 'Total Orders', 'marketplace' ); ?></th>										<th><?php _e( 'Total Sales', 'marketplace' ); ?></th>										<th><?php _e( 'Total Products', 'marketplace' ); ?></th>										<th><?php _e( 'Total Categories', 'marketplace' ); ?></th>									</tr>								</thead>								<tbody>									<td><?php echo $total_orders; ?></td>									<td><?php echo mp_price($total_sales); ?></td>									<td><?php echo $total_products; ?></td>									<td><?php echo $total_categories; ?></td>								</tbody>							</table>						</div>					</div>                    <div class="wkmp-postbox" style="margin-bottom:20px;">						<div class="wkmp_dashboard_left">                            <h3><span><?php _e( 'Today Order Count', 'marketplace' ); ?></span></h3>                            <div class="inside">								<div id="today_order_count_meter_gauge" class="example-chart"></div>                            </div>						</div>						<div class="wkmp_dashboard_left">							<h3><span><?php _e( 'Top Products', 'marketplace' ); ?></span></h3>							<div class="inside">								<div id="top_product_pie_chart" class="example-chart"></div>							</div>						</div>					</div>                    <div class="wkmp-postbox">                        <h3><span><?php _e( 'Last 7 days Sales Amount', 'marketplace' ); ?></span></h3>                        <div class="inside">							<div id="last_7_days_sales_order_amount" class="example-chart" style="width:92%"></div>                        </div>                    </div>					<br/>                    <div class="wkmp-postbox">                        <h3><span><?php _e( 'Sales Order Summary', 'marketplace' ); ?></span></h3>                        <div class="inside">                    		<div id="sales_order_count_value" class="example-chart" style="width:92%"></div>                        </div>                    </div>                    <div class="wkmp-postbox">                        <h3><span><?php _e( 'Recent Orders', 'marketplace' ); ?></span></h3>                        <div class="inside">                            <?php $this->recent_orders();?>                        </div>                    </div>                    <div class="wkmp-postbox">                        <h3><span><?php _e( 'Top Billing Countries', 'marketplace' ); ?></span></h3>                        <div class="inside">                            <div id="top_billing_country" class="example-chart" style="width:92%"></div>                        </div>                    </div>                    <div class="wkmp-postbox">                        <h3><span><?php _e( 'Top Customers', 'marketplace' ); ?></span></h3>                        <div class="inside">                            <?php $this->top_customer_list();?>                        </div>                    </div>                </div>			<?php		}		public function getOrderItemId()		{			global $wpdb;			$user_id = get_current_user_id();			$sql = "select woitems.order_item_id,woitems.order_id from {$wpdb->prefix}woocommerce_order_itemmeta woi join {$wpdb->prefix}woocommerce_order_items woitems on woitems.order_item_id=woi.order_item_id join {$wpdb->prefix}posts post on woi.meta_value=post.ID where woi.meta_key='_product_id' and post.ID=woi.meta_value and post.post_author='".$user_id."' GROUP BY order_id";			$result = $wpdb->get_results($sql);			$ID = array();			$order_ID = array();			foreach($result as $res)			{				$ID[]=$res->order_item_id;				$order_ID[]=$res->order_id;			}			// return array('id' => implode(',',$ID), 'o_id' => implode(',',$order_ID));			return implode(',',$ID);			// return implode(',',$order_ID);		}		public function getOrderID()		{			global $wpdb;			$user_id = get_current_user_id();			$sql="select woitems.order_id from {$wpdb->prefix}woocommerce_order_itemmeta woi join {$wpdb->prefix}woocommerce_order_items woitems on woitems.order_item_id=woi.order_item_id join {$wpdb->prefix}posts post on woi.meta_value=post.ID where woi.meta_key='_product_id' and post.ID=woi.meta_value and post.post_author='".$user_id."' GROUP BY order_id";			$result=$wpdb->get_results($sql);			$ID = array();			$order_ID = array();			foreach($result as $res)			{				$order_ID[]=$res->order_id;			}			return implode(',',$order_ID);		}		/*this week sales order */		function mp_Last_7_days_sales_order_amount()		{			global $wpdb,$sql,$Limit;			$weekarray = $new_data = array();			$timestamp = time();			$date=date('Y-m-d', $timestamp);			for ($i = 0 ; $i < 7 ; $i++) {				$weekarray[] =  date('Y-m-d', $timestamp);				$timestamp -= 24 * 3600;			}			$postid=$this->getOrderItemId();			if($postid)			{			$sql = "select date(post.post_date)AS 'Date' , sum(woi.meta_value)  AS 'TotalAmount' from {$wpdb->prefix}woocommerce_order_items as item join {$wpdb->prefix}woocommerce_order_itemmeta woi on item.order_item_id=woi.order_item_id join {$wpdb->prefix}posts as post on item.order_id=post.ID where item.order_item_id in($postid) and woi.meta_key='_line_total' AND (post.post_date >= DATE_SUB(CURDATE(), INTERVAL 7 DAY))	GROUP BY DATE(post.post_date)";			$order_items = $wpdb->get_results($sql);			$item_dates = array();			$item_data = array();			foreach($order_items as $item)			{				$item_dates[] = trim($item->Date);				$item_data[$item->Date]	= $item->TotalAmount;			}			foreach($weekarray as $date)			{				if(in_array($date, $item_dates))				{					$new_data[$date] = $item_data[$date];				}				else				{					$new_data[$date] = 0;				}			}			}			?>			<script>				var weekgraph = new google.visualization.DataTable();				weekgraph.addColumn('string', 'Date');				weekgraph.addColumn('number', 'TotalAmount');				weekgraph.addRows(<?php echo $new_data ? count($new_data) : 1; ?>);			</script>			<?php			$i = 0;			if( ! empty( $new_data ) ) :				foreach($new_data as $key => $value)				{					?>					<script>						weekgraph.setValue(<?php echo $i;?>, 0, '<?php echo $key;?>');						weekgraph.setValue(<?php echo $i;?>, 1, '<?php echo $value;?>');					</script>					<?php						$i++;				}			else :				?>					<script>						weekgraph.setValue(<?php echo 0;?>, 0, '<?php echo date("Y-m-d");?>');						weekgraph.setValue(<?php echo 0;?>, 1, '<?php echo 1;?>');					</script>				<?php			endif;		}		/*Graph Start From Here*/		function mp_today_order_count()		{			global $wpdb,$sql,$Limit;			$postid=$this->getOrderID();			if($postid)			$sql = "SELECT SUM(postmeta.meta_value)AS 'OrderTotal' ,COUNT(*) AS 'OrderCount' ,'Today' AS 'SalesOrder' 	FROM {$wpdb->prefix}postmeta as postmeta LEFT JOIN  {$wpdb->prefix}posts as posts ON posts.ID=postmeta.post_id WHERE posts.ID in ($postid) and meta_key='_order_total' AND DATE(posts.post_date) = DATE(NOW())";			$order_items = $wpdb->get_results($sql);			?>			<script>				var todaygraph = new google.visualization.DataTable();				todaygraph.addColumn('number', 'Total Order');				todaygraph.addColumn('string', 'Today');				todaygraph.addRows(1);				todaygraph.setValue(0, 0, '<?php echo $order_items ? $order_items[0]->OrderCount : 0;?>');			</script>			<?php		}		/*Top 5 Products*/		function mp_pie_chart_top_product()		{			global $wpdb,$sql,$Limit;			$Limit = 5;			$user_id = get_current_user_id();			/*Order ID, Order Product Name */			$sql = "SELECT post.post_author, woi.meta_value as woi_meta, woi6.meta_value as woi6_meta,woi_auther.meta_value as woi_auther_meta, wois.order_item_name AS  'ItemName', wois.order_item_id, post.ID, SUM( woi.meta_value ) AS  'Qty', SUM( woi6.meta_value ) AS  'Total'				FROM {$wpdb->prefix}woocommerce_order_items AS wois				LEFT JOIN {$wpdb->prefix}woocommerce_order_itemmeta AS woi ON woi.order_item_id = wois.order_item_id				LEFT JOIN {$wpdb->prefix}woocommerce_order_itemmeta AS woi6 ON woi6.order_item_id = wois.order_item_id				LEFT JOIN {$wpdb->prefix}woocommerce_order_itemmeta AS woi_auther ON woi_auther.order_item_id = wois.order_item_id				JOIN {$wpdb->prefix}posts post ON post.ID = woi_auther.meta_value				WHERE post.post_author='".$user_id."' and woi.meta_key ='_qty'				AND woi6.meta_key ='_line_total'				AND woi_auther.meta_key =  '_product_id'				GROUP BY wois.order_item_name				ORDER BY Total DESC				LIMIT 5";			$order_items = $wpdb->get_results($sql);			?>			<script>				var maxsale = new google.visualization.DataTable();				maxsale.addColumn('string', 'Item Name');				maxsale.addColumn('number', 'Quantity');				maxsale.addRows(<?php echo $order_items ? count($order_items) : 1;?>);			</script>			<?php			$i = 0;			if( ! empty( $order_items ) ){				foreach($order_items as $key => $value){					?>					<script>						maxsale.setValue(<?php echo $i;?>, 0, '<?php echo $value->ItemName;?>');						maxsale.setValue(<?php echo $i;?>, 1, '<?php echo $value->Qty;?>');					</script>					<?php					$i++;				}			}			else{			?>				<script>					maxsale.setValue(<?php echo 0;?>, 0, '<?php echo 'Empty';?>');					maxsale.setValue(<?php echo 0;?>, 1, '<?php echo 1;?>');				</script>			<?php			}		}		/*14-Feb-2014*/		function mp_get_total_categories_count()		{			global $wpdb,$sql,$Limit;			$sql = "SELECT COUNT(*) As 'category_count' FROM {$wpdb->prefix}term_taxonomy as term_taxonomy					LEFT JOIN  {$wpdb->prefix}terms as terms ON terms.term_id=term_taxonomy.term_id			WHERE taxonomy ='product_cat'";			return $wpdb->get_var($sql);			//print_array($order_items);		}		function mp_get_total_products_count()		{			global $wpdb,$sql,$Limit;			$user_id = get_current_user_id();			$sql = "SELECT COUNT(*) AS 'product_count' FROM {$wpdb->prefix}posts as posts WHERE  post_type='product' AND post_author='".$user_id."'  AND post_status = 'publish'";			return $wpdb->get_var($sql);		}		/*13-Feb-2014*/		/*total order count*/		function mp_get_total_order_count()		{			global $wpdb;			$postid=$this->getOrderItemId();			if($postid) {			$sql = " SELECT count(*) AS 'total_order_count' FROM {$wpdb->prefix}woocommerce_order_items as item join {$wpdb->prefix}posts as post on item.order_id=post.ID WHERE  post.post_type='shop_order' AND item.order_item_id in ($postid) AND item.order_id=post.ID";			if($wpdb->get_var($sql)==0)			{				$total_order=0;			}			else{				$total_order=$wpdb->get_var($sql);			}			return $total_order;			}		}		/*total order amount*/		function mp_get_total_order_amount(){			global $wpdb;			$postid=$this->getOrderItemId();			// $postid = $p_id['id'][0];			if($postid) {			$sql="select sum(meta_value) AS 'total_order_amount' from {$wpdb->prefix}woocommerce_order_itemmeta where meta_key='_line_total' and order_item_id in($postid)";			return $wpdb->get_var($sql);			}		}		/*13-Feb-2014*/		function mp_sales_order_count_value(){			global $wpdb;			$order_items = array();			$postid=$this->getOrderItemId();			if($postid){			$sql="SELECT sum(woi.meta_value) as 'OrderTotal',count(*) AS 'OrderCount','Today' AS 'salesOrder'				FROM {$wpdb->prefix}woocommerce_order_itemmeta woi				JOIN {$wpdb->prefix}woocommerce_order_items woitems ON woitems.order_item_id = woi.order_item_id				JOIN {$wpdb->prefix}posts post ON woitems.order_id = post.ID				WHERE woi.meta_key ='_line_total' AND woitems.order_item_id in (".$postid.") AND DATE(post.post_date) = DATE(NOW())";			$sql .= "	 UNION ";			/*Yesterday*/			$sql.="SELECT sum(woi.meta_value) as 'OrderTotal',count(*) AS 'OrderCount','Yesterday' AS 'salesOrder'	FROM {$wpdb->prefix}woocommerce_order_itemmeta woi				JOIN {$wpdb->prefix}woocommerce_order_items woitems ON woitems.order_item_id = woi.order_item_id				JOIN {$wpdb->prefix}posts post ON woitems.order_id = post.ID				WHERE woi.meta_key ='_line_total' AND woitems.order_item_id in (".$postid.") AND  DATE(post.post_date)= DATE(DATE_SUB(NOW(), INTERVAL 1 DAY))";			$sql .= "	 UNION ";			/*Week*/			$sql.="SELECT sum(woi.meta_value) as 'OrderTotal',count(*) AS 'OrderCount','Week' AS 'salesOrder'				FROM {$wpdb->prefix}woocommerce_order_itemmeta woi				JOIN {$wpdb->prefix}woocommerce_order_items woitems ON woitems.order_item_id = woi.order_item_id				JOIN {$wpdb->prefix}posts post ON woitems.order_id = post.ID				WHERE woi.meta_key ='_line_total' AND woitems.order_item_id in (".$postid.") AND WEEK(DATE(CURDATE())) = WEEK( DATE(post.post_date))";			/*Month*/			$sql .= "	 UNION ";			$sql.="SELECT sum(woi.meta_value) as 'OrderTotal',count(*) AS 'OrderCount','Month' AS 'salesOrder'				FROM {$wpdb->prefix}woocommerce_order_itemmeta woi				JOIN {$wpdb->prefix}woocommerce_order_items woitems ON woitems.order_item_id = woi.order_item_id				JOIN {$wpdb->prefix}posts post ON woitems.order_id = post.ID				WHERE woi.meta_key ='_line_total' AND woitems.order_item_id in (".$postid.") AND MONTH(DATE(CURDATE())) = MONTH( DATE(post.post_date))";			/*Year*/			$sql .= "	 UNION ";			$sql.="SELECT sum(woi.meta_value) as 'OrderTotal',count(*) AS 'OrderCount','Year' AS 'salesOrder'				FROM {$wpdb->prefix}woocommerce_order_itemmeta woi				JOIN {$wpdb->prefix}woocommerce_order_items woitems ON woitems.order_item_id = woi.order_item_id				JOIN {$wpdb->prefix}posts post ON woitems.order_id = post.ID				WHERE woi.meta_key ='_line_total' AND woitems.order_item_id in (".$postid.") AND YEAR(DATE(CURDATE())) = YEAR( DATE(post.post_date))";			$order_items = $wpdb->get_results($sql);			}			?>			<!--<table style="width:100%" class="dashboardtable">				<thead>					<tr>						<th><?php echo _e("Sales"); ?></th>						<th><?php echo _e("Order Count"); ?></th>						<th><?php echo _e("Amount"); ?></th>					</tr>				</thead>				<tbody>					<?php						foreach ( $order_items as $key => $order_item ) {							if($key%2 == 1) {								$alternate = "alternate ";							}							else {								$alternate = "";						};					?>						<tr class="<?php echo $alternate."row_".$key;?>">							<td><?php echo $order_item->salesOrder?></td>							<td><?php echo $order_item->OrderCount?></td>							<td><?php echo mp_price($order_item->OrderTotal);?></td>						</tr>					<?php } ?>				<tbody>			</table> -->			<script>				var salesorderamt = new google.visualization.DataTable();				salesorderamt.addColumn('string', 'SalesOrder');				salesorderamt.addColumn('number', 'TotalSaleAmount');				salesorderamt.addColumn('number', 'TotalOrderCount');				salesorderamt.addRows(<?php echo $order_items ? count($order_items) : 1;?>);			</script>			<?php			$i = 0;			if( ! empty( $order_items ) ) :				foreach($order_items as $key)				{					?>					<script>						salesorderamt.setValue(<?php echo $i;?>, 0, '<?php echo $key->salesOrder;?>');						salesorderamt.setValue(<?php echo $i;?>, 1, '<?php echo $key->OrderTotal;?>');						salesorderamt.setValue(<?php echo $i;?>, 2, '<?php echo $key->OrderCount;?>');					</script>					<?php					$i++;				}			else :				?>					<script>						salesorderamt.setValue(<?php echo 0;?>, 0, '<?php echo 0;?>');						salesorderamt.setValue(<?php echo 0;?>, 1, '<?php echo 0;?>');						salesorderamt.setValue(<?php echo 0;?>, 2, '<?php echo 0;?>');					</script>				<?php			endif;		}		function mp_top_billing_country(){			global $wpdb;			$order_items = array();			$per_page = $this->per_page();			$postid=$this->getOrderItemId();			if($postid){			$sql = "SELECT sum(woi.meta_value) AS 'Total',postmeta.meta_value AS 'BillingCountry',Count(*) AS 'OrderCount' FROM {$wpdb->prefix}woocommerce_order_itemmeta woi			left join {$wpdb->prefix}woocommerce_order_items wois on woi.order_item_id=wois.order_item_id			left join {$wpdb->prefix}postmeta as postmeta on postmeta.post_id=wois.order_id			WHERE  woi.meta_key='_line_total' AND wois.order_item_id in(".$postid.") AND  postmeta.meta_key='_billing_country'			GROUP BY  postmeta.meta_value			Order By OrderCount DESC			LIMIT {$per_page}";			$order_items = $wpdb->get_results($sql);			}			?>            <!--<table style="width:100%" class="dashboardtable">                <thead>                    <tr>                        <th><?php echo _e("Billing Country"); ?></th>                        <th><?php echo _e("Order Count"); ?></th>                        <th><?php echo _e("Amount"); ?></th>                    </tr>                </thead>                <tbody>                    <?php                    foreach ( $order_items as $key => $order_item ) {                    if($key%2 == 1){$alternate = "alternate ";}else{$alternate = "";};                    ?>                        <tr class="<?php echo $alternate."row_".$key;?>">                            <td><?php echo $country->countries[$order_item->BillingCountry];?></td>                            <td><?php echo $order_item->OrderCount?></td>                            <td><?php echo mp_price($order_item->Total)?></td>                         <?php } ?>                        </tr>                <tbody>            </table> -->            <script>	            var topBilling = new google.visualization.DataTable();	            topBilling.addColumn('string', 'country');				topBilling.addColumn('number', 'Total-Amount');				topBilling.addColumn('number', 'OrderTotalCount');				topBilling.addRows(<?php echo count($order_items)?>);            </script>            <?php			$i = 0;			if( ! empty( $order_items ) ) :				$country = new WC_Countries;				foreach($order_items as $key)				{					?>					<script>						topBilling.setValue(<?php echo $i;?>, 0, '<?php echo $country->countries[$key->BillingCountry];?>');						topBilling.setValue(<?php echo $i;?>, 1, '<?php echo $key->Total;?>');						topBilling.setValue(<?php echo $i;?>, 2, '<?php echo $key->OrderCount;?>');					</script>					<?php					$i++;				}			endif;		}		public function recent_orders(){			global $wpdb;			$order_items = array();			$per_page = $this->per_page();			$postid=$this->getOrderItemId();			if($postid){			$sql = "SELECT	woocommerce_order_items.order_id As 'OrderID',woi3.meta_value AS 'ItemCount',woi2.meta_value As 'OrderTotal',posts.post_date AS 'OrderDate',postmeta2.meta_value As 'BillingEmail',postmeta4.meta_value As 'FirstName'FROM {$wpdb->prefix}woocommerce_order_items as woocommerce_order_items				LEFT JOIN  {$wpdb->prefix}postmeta as postmeta4 ON postmeta4.post_id=woocommerce_order_items.order_id				LEFT JOIN  {$wpdb->prefix}woocommerce_order_itemmeta as woi ON woi.order_item_id=woocommerce_order_items.order_item_id				LEFT JOIN {$wpdb->prefix}woocommerce_order_itemmeta as woi2 on woi2.order_item_id=woocommerce_order_items.order_item_id				LEFT JOIN {$wpdb->prefix}woocommerce_order_itemmeta as woi3 on woi3.order_item_id=woocommerce_order_items.order_item_id				LEFT JOIN  {$wpdb->prefix}postmeta as postmeta2 ON postmeta2.post_id=woocommerce_order_items.order_id				LEFT JOIN  {$wpdb->prefix}posts as posts ON posts.ID=woocommerce_order_items.order_id				WHERE				postmeta2.meta_key='_billing_email'				AND woocommerce_order_items.order_item_id in(".$postid.")				AND posts.post_type='shop_order'				AND postmeta4.meta_key='_billing_first_name'				AND woi2.meta_key='_line_total'				AND woi3.meta_key='_qty'				GROUP BY woocommerce_order_items.order_id				Order By posts.post_date DESC				LIMIT {$per_page}				";				$order_items = $wpdb->get_results($sql );				}				?>				 <table style="width:100%" class="dashboardtable">                    <thead>                        <tr>                            <th><?php echo _e("Order ID", "marketplace"); ?></th>                            <th><?php echo _e("Order Date", "marketplace"); ?></th>                            <th><?php echo _e("Billing Email", "marketplace"); ?></th>                            <th><?php echo _e("First Name", "marketplace"); ?></th>                            <th><?php echo _e("Item Count", "marketplace"); ?></th>                            <th><?php echo _e("Amount", "marketplace"); ?></th>                        </tr>                    </thead>                    <tbody>                        <?php													if(count($order_items)>0):                            foreach ( $order_items as $key => $order_item ) {                            if($key%2 == 1){$alternate = "alternate ";}else{$alternate = "";};                        ?>                        <tr class="<?php echo $alternate."row_".$key;?>">                            <td><?php echo $order_item->OrderID?></td>                            <td><?php echo $order_item->OrderDate?></td>                            <td><?php echo $order_item->BillingEmail?></td>                            <td><?php echo $order_item->FirstName?></td>                            <td><?php echo $order_item->ItemCount?></td>                            <td><?php echo mp_price($order_item->OrderTotal)?></td>                        </tr>                         <?php }												 	else:														echo '<tr><td>';														echo __('<p>No orders found.</p>', 'marketplace');														echo '</td></tr>';													endif;												 ?>                    <tbody>				</table>		<?php		}		function top_customer_list(){			global $wpdb;			$order_items = array();			$postid=$this->getOrderItemId();			$per_page = $this->per_page();			if($postid){			$sql = "SELECT SUM(woi.meta_value) AS 'Total'							,postmeta.meta_value AS 'BillingEmail'							,postmeta2.meta_value AS 'BillingFirstName'							,Count(wois.order_id) AS 'OrderCount' from {$wpdb->prefix}woocommerce_order_itemmeta woi					left join {$wpdb->prefix}woocommerce_order_items wois on woi.order_item_id=wois.order_item_id					left join {$wpdb->prefix}postmeta as postmeta on postmeta.post_id=wois.order_id					LEFT JOIN  {$wpdb->prefix}postmeta as postmeta2 ON postmeta2.post_id=wois.order_id					JOIN {$wpdb->prefix}posts as posts on posts.ID=wois.order_id					WHERE  woi.meta_key='_line_total' AND wois.order_item_id in(".$postid.") AND  postmeta.meta_key='_billing_email' AND postmeta2.meta_key='_billing_first_name'			 		GROUP BY  postmeta.meta_value Order By Total DESC LIMIT {$per_page}";			$order_items = $wpdb->get_results($sql );			}			?>            <table style="width:100%" class="dashboardtable">                <thead>                    <tr>                        <th><?php echo _e("Billing First Name", "marketplace"); ?></th>                        <th><?php echo _e("Billing Email", "marketplace"); ?></th>                        <th><?php echo _e("Order Count", "marketplace"); ?></th>                        <th><?php echo _e("Amount", "marketplace"); ?></th>                    </tr>                </thead>                <tbody>                    <?php											if(count($order_items)>0):                        foreach ( $order_items as $key => $order_item ) {                            if($key%2 == 1){$alternate = "alternate ";}else{$alternate = "";};                            ?>                            <tr class="<?php echo $alternate."row_".$key;?>">                                <td><?php echo $order_item->BillingFirstName?></td>                                <td><?php echo $order_item->BillingEmail?></td>                                <td><?php echo $order_item->OrderCount?></td>                                <td><?php echo mp_price($order_item->Total)?></td>                            </tr>                     <?php }										 	else:												echo '<tr><td>';												echo __('<p>No orders found.</p>', 'marketplace');												echo '</td></tr>';											endif;										 ?>                <tbody>            </table>			<?php		}	}}$MP_Report_Dashboard = new MP_Report_Dashboard();if(!function_exists('mp_price')){	function mp_price($vlaue){		if(!function_exists('woocommerce_price') || 'WC_IS_MIS_WC_ACITVE' == false){			return apply_filters( 'mp_currency_symbol', '&#36;', 'USD').$vlaue;		}		else		{			return wc_price($vlaue);		}	}}?>